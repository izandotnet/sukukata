'use strict';

module.exports = [
    { type: 'KV', disassemble: 'KV', },
    { type: 'KVV', disassemble: 'KVV', },
    { type: 'VVK', disassemble: 'VVK', },
    { type: 'KVK', disassemble: 'KVK', },
    { type: 'VKV', disassemble: 'V+KV', },
    { type: 'KVKK', disassemble: 'KVKK', },
    { type: 'VKKV', disassemble: 'V+KKV', },
    { type: 'VKKV', disassemble: 'VK+KV', },
    { type: 'VKVK', disassemble: 'V+KVK', },
    { type: 'VKVV', disassemble: 'V+KVV', },
    { type: 'KVKV', disassemble: 'KV+KV', },
    { type: 'KVVK', disassemble: 'KV+VK', },
    { type: 'KVKKV', disassemble: 'KVK+KV', },
    { type: 'KVVKK', disassemble: 'KV+VKK', },
    { type: 'VKKVK', disassemble: 'VK+KVK', },
    { type: 'VKKVV', disassemble: 'VK+KVV', },
    { type: 'KKVKV', disassemble: 'KKV+KV', },
    { type: 'VVKVK', disassemble: 'VV+KVK', },
    { type: 'KVKVK', disassemble: 'KV+KVK', },
    { type: 'VKVKK', disassemble: 'V+KVKK', },
    { type: 'KVKVV', disassemble: 'KV+KVV', },
    { type: 'KVKKV', disassemble: 'KV+KKV', },
    { type: 'VKVVK', disassemble: 'V+KV+VK', },
    { type: 'KVVKV', disassemble: 'KV+V+KV', },
    { type: 'VKVKV', disassemble: 'V+KV+KV', },
    { type: 'VVVKV', disassemble: 'VV+V+KV', },
    { type: 'KVKKVV', disassemble: 'KVK+KVV', },
    { type: 'KVKKKV', disassemble: 'KVKK+KV', },
    { type: 'KVVKVK', disassemble: 'KVV+KVK', },
    { type: 'VKKVKK', disassemble: 'VK+KVKK', },
    { type: 'KVKKVK', disassemble: 'KVK+KVK', },
    { type: 'KVKKVK', disassemble: 'KV+KKVK', },
    { type: 'KKVKKV', disassemble: 'KKV+KKV', },
    { type: 'KKVKKV', disassemble: 'KKVK+KV', },
    { type: 'KKVKVK', disassemble: 'KKV+KVK', },
    { type: 'KVKVKK', disassemble: 'KV+KVKK', },
    { type: 'KVKVVK', disassemble: 'KV+KV+VK', },
    { type: 'VKVKVK', disassemble: 'V+KV+KVK', },
    { type: 'KVVKVK', disassemble: 'KV+V+KVK', },
    { type: 'VKKVKV', disassemble: 'VK+KV+KV', },
    { type: 'VKVKKV', disassemble: 'V+KVK+KV', },
    { type: 'KVKVKV', disassemble: 'KV+KV+KV', },
    { type: 'KVKKVKK', disassemble: 'KVK+KVKK', },
    { type: 'VKKKKVK', disassemble: 'VK+KKKVK', },
    { type: 'KKVVKVK', disassemble: 'KKVV+KVK', },
    { type: 'KVKKKVK', disassemble: 'KVKK+KVK', },
    { type: 'KKVKVKK', disassemble: 'KKV+KVKK', },
    { type: 'KVKVKVV', disassemble: 'KV+KV+KVV', },
    { type: 'KVKVKVV', disassemble: 'KV+KV+KV+V', },
    { type: 'KVKKVKV', disassemble: 'KVK+KV+KV', },
    { type: 'KVKKVKV', disassemble: 'KV+KKV+KV', },
    { type: 'KKVKVVK', disassemble: 'KKV+KV+VK', },
    { type: 'KVKVKVK', disassemble: 'KV+KV+KVK', },
    { type: 'KVKKVVK', disassemble: 'KVK+KV+VK', },
    { type: 'KVVKVKK', disassemble: 'KV+V+KVKK', },
    { type: 'KVKVKKV', disassemble: 'KV+KVK+KV', },
    { type: 'KVKVKKV', disassemble: 'KV+KV+KKV', },
    { type: 'KVKVKKV', disassemble: 'KVK+VK+KV', },
    { type: 'VKKVKKV', disassemble: 'VK+KV+KKV', },
    { type: 'KVKVVVK', disassemble: 'KV+KVV+VK', },
    { type: 'VKKVKVK', disassemble: 'VK+KV+KVK', },
    { type: 'VKVKKKV', disassemble: 'V+KVK+KKV', },
    { type: 'KKVVKVK', disassemble: 'K+KVV+KVK', },
    { type: 'KKVKVKV', disassemble: 'KKV+KV+KV', },
    { type: 'KVVKVKV', disassemble: 'KV+V+KV+KV', },
    { type: 'KVKKKVKK', disassemble: 'KVKK+KVKK', },
    { type: 'KKVVKVKK', disassemble: 'KKVV+KVKK', },
    { type: 'KKVKVKV', disassemble: 'K+KV+KV+KV', },
    { type: 'VKVKVKV', disassemble: 'V+KV+KV+KV', },
    { type: 'KVKVVKKV', disassemble: 'KV+KVV+KKV', },
    { type: 'KVKVKKVK', disassemble: 'KV+KVK+KVK', },
    { type: 'KVKVKKVK', disassemble: 'KV+KV+KKVK', },
    { type: 'KVKKVKKV', disassemble: 'KVK+KVK+KV', },
    { type: 'KVKKVKKV', disassemble: 'KV+KKV+KKV', },
    { type: 'KVVKVKVK', disassemble: 'KVV+KV+KVK', },
    { type: 'KVKKVKVK', disassemble: 'KVK+KV+KVK', },
    { type: 'KVKKVKVK', disassemble: 'KV+KKV+KVK', },
    { type: 'KVKVKKVV', disassemble: 'KV+KVK+KVV', },
    { type: 'KVKKKVKV', disassemble: 'KVKK+KV+KV', },
    { type: 'KVKKVKVV', disassemble: 'KVK+KV+KVV', },
    { type: 'KKKKVKVK', disassemble: 'KKK+KV+KVK', },
    { type: 'KVKVVKVK', disassemble: 'KV+KVV+KVK', },
    { type: 'KVKVKKKV', disassemble: 'KV+KVK+KKV', },
    { type: 'KKVKVKVK', disassemble: 'KKV+KV+KVK', },
    { type: 'KVKVKVKV', disassemble: 'KV+KV+KV+KV', },
    { type: 'VKKVKVKV', disassemble: 'VK+KV+KV+KV', },
    { type: 'KVKVKVVK', disassemble: 'KV+KV+KV+VK', },
    { type: 'VKVKKVKV', disassemble: 'V+KVK+KV+KV', },
    { type: 'VKVKVKKV', disassemble: 'V+KV+KV+KKV', },
    { type: 'KVKKVKKKV', disassemble: 'KVK+KVKK+KV', },
    { type: 'KVKKVKKKV', disassemble: 'KV+KKVKK+KV', },
    { type: 'KVKKVKKKV', disassemble: 'KVK+KVK+KKV', },
    { type: 'KVKVKKKVK', disassemble: 'KV+KVKK+KVK', },
    { type: 'KVKVKKVKK', disassemble: 'KV+KVK+KVKK', },
    { type: 'KVKKVKVKK', disassemble: 'KV+KKV+KVKK', },
    { type: 'KVKKKVKKV', disassemble: 'KVKK+KV+KKV', },
    { type: 'KVKKVVKVK', disassemble: 'KVK+KVV+KVK', },
    { type: 'KVKKVKKVK', disassemble: 'KVK+KVK+KVK', },
    { type: 'KVKKVKKVK', disassemble: 'KV+KKVK+KVK', },
    { type: 'KVKKKVKVK', disassemble: 'KVKK+KV+KVK', },
    { type: 'KVKKVKKVK', disassemble: 'KVK+KV+KKVK', },
    { type: 'KVKKKVKVV', disassemble: 'KVK+KKV+KVV', },
    { type: 'KKVKVKKVK', disassemble: 'KKV+KVK+KVK', },
    { type: 'KVKKVKVKV', disassemble: 'KVK+KV+KV+KV', },
    { type: 'KVKVKVKVK', disassemble: 'KV+KV+KV+KVK', },
    { type: 'KVKKVKVVK', disassemble: 'KVK+KV+KV+VK', },
    { type: 'KVKKVKVKV', disassemble: 'KV+KKV+KV+KV', },
    { type: 'KVKVVKVKV', disassemble: 'KV+KVV+KV+KV', },
    { type: 'KVKKVVKVK', disassemble: 'KVK+KV+VK+VK', },
    { type: 'KVKVKVKKV', disassemble: 'KV+KV+KV+KKV', },
    { type: 'KVKVVKKKV', disassemble: 'KV+KV+VK+KKV', },
    { type: 'VKKVKVKVV', disassemble: 'VK+KV+KV+KVV', },
    { type: 'KVKKVKKVV', disassemble: 'KVK+KV+KKV+V', },
    { type: 'VKKVKVKKV', disassemble: 'VK+KV+KV+KKV', },
    { type: 'KKVKVKVKV', disassemble: 'KKV+KV+KV+KV', },
    { type: 'KVKKVVKVV', disassemble: 'KV+KKVV+KV+V', },
    { type: 'KVKKVKKKKV', disassemble: 'KVK+KVKK+KKV', },
    { type: 'KVVKVKVVK', disassemble: 'KV+V+KV+KV+VK', },
    { type: 'KVKKVVKKVK', disassemble: 'KVK+KVVK+KVK', },
    { type: 'KVKKVKKVKK', disassemble: 'KVK+KVK+KVKK', },
    { type: 'KVKKKVKKVK', disassemble: 'KVK+KKVK+KVK', },
    { type: 'KVKVKVVKKV', disassemble: 'KV+KV+KVV+KKV', },
    { type: 'KVKKVKVVVK', disassemble: 'KVK+KV+KVV+VK', },
    { type: 'KVKKVKVKVK', disassemble: 'KVK+KV+KV+KVK', },
    { type: 'KVKKVKVKVK', disassemble: 'KV+KKV+KV+KVK', },
    { type: 'KVKVKKVKVK', disassemble: 'KV+KVK+KV+KVK', },
    { type: 'KVKKKVKVVK', disassemble: 'KVKK+KV+KV+VK', },
    { type: 'KVKVKVKKVK', disassemble: 'KV+KV+KVK+KVK', },
    { type: 'KVKVKKVKVK', disassemble: 'KV+KV+KKV+KVK', },
    { type: 'KVKVKVKKKV', disassemble: 'KV+KV+KVK+KKV', },
    { type: 'KVKVKKKVVK', disassemble: 'KV+KVKK+KV+VK', },
    { type: 'KVKKVKVKVV', disassemble: 'KV+KKV+KV+KV+V', },
    { type: 'VKVKVKVKVK', disassemble: 'V+KV+KV+KV+KVK', },
    { type: 'KVKVKVKVKV', disassemble: 'KV+KV+KV+KV+KV', },
    { type: 'KVKVKKVVKVK', disassemble: 'KV+KVK+KVV+KVK', },
    { type: 'KVKVKVVKKVK', disassemble: 'KV+KV+KVVK+KVK', },
    { type: 'KVKKKVKVKVK', disassemble: 'KVKK+KV+KV+KVK', },
    { type: 'KVVKKKVKKVK', disassemble: 'KV+VKK+KVK+KVK', },
    { type: 'KVKKVKVKKVK', disassemble: 'KV+KKV+KVK+KVK', },
    { type: 'KVKVKKVKKKV', disassemble: 'KV+KV+KKVK+KKV', },
    { type: 'KVKKVKKVKVK', disassemble: 'KVK+KVK+KV+KVK', },
    { type: 'KVKKVKVKKVK', disassemble: 'KVK+KV+KVK+KVK', },
    { type: 'KVKKVKVVKVK', disassemble: 'KVK+KV+KVV+KVK', },
    { type: 'KKVKKVKVKKV', disassemble: 'KKVK+KV+KVK+KV', },
    { type: 'KVKVKKVKKVK', disassemble: 'KV+KVK+KVK+KVK', },
    { type: 'KVKKVKKVKKV', disassemble: 'KV+KKVK+KVKK+V', },
    { type: 'KVKVKVKVKKV', disassemble: 'KV+KV+KV+KV+KKV', },
    { type: 'KVKVKKVKVVK', disassemble: 'KV+KVK+KV+KV+VK', },
    { type: 'KVKKVKVKVKV', disassemble: 'KVK+KV+KV+KV+KV', },
    { type: 'KVKVKVVKVKV', disassemble: 'KV+KV+KVV+KV+KV', },
    { type: 'VKKKVKVKVKV', disassemble: 'VK+KKV+KV+KV+KV', },
    { type: 'KVKVKVKVKVK', disassemble: 'KV+KV+KV+KV+KVK', },
    { type: 'KVKVKKKVKKVK', disassemble: 'KV+KVKK+KVK+KVK', },
    { type: 'KVKKKVKVKKVK', disassemble: 'KVKK+KV+KVK+KVK', },
    { type: 'KVKVKKVKKKVK', disassemble: 'KV+KVK+KVKK+KVK', },
    { type: 'KVKKVKKVKKVK', disassemble: 'KVK+KVK+KV+KKVK', },
    { type: 'KVKKVKKVVKVK', disassemble: 'KV+KKVK+KVV+KVK', },
    { type: 'KVKKKVKVVKVK', disassemble: 'KVKK+KV+KVV+KVK', },
    { type: 'KVKVVKVKVKKV', disassemble: 'KV+KVV+KV+KVK+KV', },
    { type: 'KVKVKKVKVVVK', disassemble: 'KV+KVK+KV+KVV+VK', },
    { type: 'KVKVKKVKVKVK', disassemble: 'KV+KVK+KV+KV+KVK', },
    { type: 'KVKKVKVVKKVK', disassemble: 'KV+KKV+KV+VK+KVK', },
    { type: 'KVKKVKKKVKKVK', disassemble: 'KV+KKVKK+KVK+KVK', },
    { type: 'KVKVKVKVKVVK', disassemble: 'KV+KV+KV+KV+KV+VK', },
    { type: 'KVKKVVKKVKKKV', disassemble: 'KVK+KVVK+KVK+KKV', },
    { type: 'KVKKVKKKVKKVK', disassemble: 'KVK+KVKK+KVK+KVK', },
    { type: 'KVKKVKKVKKKVK', disassemble: 'KV+KKVK+KVKK+KVK', },
    { type: 'KVKVKKVKVKKVK', disassemble: 'KV+KVK+KV+KVK+KVK', },
    { type: 'KVKVKVKVKVKKV', disassemble: 'KV+KV+KV+KV+KV+KKV', },
    { type: 'KVKVKVKKVKVVK', disassemble: 'KV+KV+KVK+KV+KV+VK', },
    { type: 'KVKKVKKVVKKKVK', disassemble: 'KVK+KVK+KV+VKK+KVK', },
    { type: 'KVKKVKKVKVKVVK', disassemble: 'KVK+KVK+KV+KV+KV+VK', },
    { type: 'KKVKVKVKKVVKKVK', disassemble: 'KKV+KV+KVK+KVVK+KVK', },
    { type: 'KVKVVKVKKVVKKVK', disassemble: 'KV+KVV+KVK+KVVK+KVK', },
];
